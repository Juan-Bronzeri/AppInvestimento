[{"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\theme.tsx":"1","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\GlobalStyles.ts":"2","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\dark.ts":"3","C:\\dev\\TCC\\AppInvestimento\\src\\store\\createStore.ts":"4","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\index.tsx":"5","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\reducer.ts":"6","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\sagas.ts":"7","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\actions.ts":"8","C:\\dev\\TCC\\AppInvestimento\\src\\services\\api.ts":"9","C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\index.tsx":"10","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\styles.ts":"11","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\styles.ts":"12","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatCurrency.ts":"13","C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\index.tsx":"14","C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\index.tsx":"15","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\index.tsx":"16","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\index.tsx":"17","C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\styles.ts":"18","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\styles.ts":"19","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\styles.ts":"20","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\emojis.ts":"21","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\styles.ts":"22","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\styles.ts":"23","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\actions.ts":"24","C:\\dev\\TCC\\AppInvestimento\\src\\index.tsx":"25","C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\auth.tsx":"26","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootSaga.ts":"27","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\reducer.ts":"28","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\auth.routes.tsx":"29","C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\index.tsx":"30","C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\index.tsx":"31","C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\styles.ts":"32","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\months.ts":"33","C:\\dev\\TCC\\AppInvestimento\\src\\repositories\\compra.ts":"34","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\index.tsx":"35","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\index.tsx":"36","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\styles.ts":"37","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\styles.ts":"38","C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\styles.ts":"39","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\styles.ts":"40","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\styles.ts":"41","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\actions.ts":"42","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\index.tsx":"43","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\reducer.ts":"44","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\sagas.ts":"45","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\light.ts":"46","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\sagas.ts":"47","C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveSell.ts":"48","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\index.tsx":"49","C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\styles.ts":"50","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatDate.ts":"51","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\index.tsx":"52","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\index.tsx":"53","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\styles.ts":"54","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\styles.ts":"55","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\index.tsx":"56","C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveBuy.ts":"57","C:\\dev\\TCC\\AppInvestimento\\src\\store\\index.ts":"58","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootReducer.ts":"59","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\actions.ts":"60","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\index.tsx":"61","C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\index.tsx":"62","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\index.tsx":"63","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\index.tsx":"64","C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\styles.ts":"65","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\index.tsx":"66"},{"size":1509,"mtime":1610982688376,"results":"67","hashOfConfig":"68"},{"size":341,"mtime":1610982688386,"results":"69","hashOfConfig":"68"},{"size":315,"mtime":1610982688387,"results":"70","hashOfConfig":"68"},{"size":844,"mtime":1611085466566,"results":"71","hashOfConfig":"68"},{"size":382,"mtime":1610982688380,"results":"72","hashOfConfig":"68"},{"size":949,"mtime":1610982688383,"results":"73","hashOfConfig":"68"},{"size":484,"mtime":1610982688382,"results":"74","hashOfConfig":"68"},{"size":448,"mtime":1610982688384,"results":"75","hashOfConfig":"68"},{"size":129,"mtime":1610982688380,"results":"76","hashOfConfig":"68"},{"size":11614,"mtime":1610982688389,"results":"77","hashOfConfig":"68"},{"size":1038,"mtime":1610982688391,"results":"78","hashOfConfig":"68"},{"size":455,"mtime":1610982688370,"results":"79","hashOfConfig":"68"},{"size":236,"mtime":1610982688388,"results":"80","hashOfConfig":"68"},{"size":571,"mtime":1610982688366,"results":"81","hashOfConfig":"68"},{"size":1546,"mtime":1610982688373,"results":"82","hashOfConfig":"68"},{"size":2210,"mtime":1610982688367,"results":"83","hashOfConfig":"68"},{"size":1129,"mtime":1610982688370,"results":"84","hashOfConfig":"68"},{"size":232,"mtime":1610982688374,"results":"85","hashOfConfig":"68"},{"size":1709,"mtime":1610982688367,"results":"86","hashOfConfig":"68"},{"size":1709,"mtime":1610982688368,"results":"87","hashOfConfig":"68"},{"size":63,"mtime":1610982688388,"results":"88","hashOfConfig":"68"},{"size":633,"mtime":1610982688365,"results":"89","hashOfConfig":"68"},{"size":509,"mtime":1610982688374,"results":"90","hashOfConfig":"68"},{"size":555,"mtime":1611014819859,"results":"91","hashOfConfig":"68"},{"size":523,"mtime":1610982688377,"results":"92","hashOfConfig":"68"},{"size":1229,"mtime":1610982688376,"results":"93","hashOfConfig":"68"},{"size":290,"mtime":1611085558185,"results":"94","hashOfConfig":"68"},{"size":941,"mtime":1610982688382,"results":"95","hashOfConfig":"68"},{"size":274,"mtime":1610982688379,"results":"96","hashOfConfig":"68"},{"size":4720,"mtime":1610982688392,"results":"97","hashOfConfig":"68"},{"size":7459,"mtime":1611258308539,"results":"98","hashOfConfig":"68"},{"size":1088,"mtime":1610982688390,"results":"99","hashOfConfig":"68"},{"size":205,"mtime":1610982688389,"results":"100","hashOfConfig":"68"},{"size":418,"mtime":1610982688378,"results":"101","hashOfConfig":"68"},{"size":1496,"mtime":1610982688375,"results":"102","hashOfConfig":"68"},{"size":198,"mtime":1610982688365,"results":"103","hashOfConfig":"68"},{"size":172,"mtime":1610982688369,"results":"104","hashOfConfig":"68"},{"size":390,"mtime":1610982688364,"results":"105","hashOfConfig":"68"},{"size":2554,"mtime":1610982688373,"results":"106","hashOfConfig":"68"},{"size":518,"mtime":1610982688371,"results":"107","hashOfConfig":"68"},{"size":1221,"mtime":1610982688369,"results":"108","hashOfConfig":"68"},{"size":850,"mtime":1611145158765,"results":"109","hashOfConfig":"68"},{"size":4832,"mtime":1611252344431,"results":"110","hashOfConfig":"68"},{"size":761,"mtime":1611085463948,"results":"111","hashOfConfig":"68"},{"size":826,"mtime":1611087075157,"results":"112","hashOfConfig":"68"},{"size":313,"mtime":1610982688387,"results":"113","hashOfConfig":"68"},{"size":492,"mtime":1610982688384,"results":"114","hashOfConfig":"68"},{"size":113,"mtime":1611146544396,"results":"115","hashOfConfig":"68"},{"size":376,"mtime":1610982688370,"results":"116","hashOfConfig":"68"},{"size":206,"mtime":1610982688390,"results":"117","hashOfConfig":"68"},{"size":444,"mtime":1610982688388,"results":"118","hashOfConfig":"68"},{"size":699,"mtime":1610982688371,"results":"119","hashOfConfig":"68"},{"size":318,"mtime":1610982688364,"results":"120","hashOfConfig":"68"},{"size":1723,"mtime":1610982688375,"results":"121","hashOfConfig":"68"},{"size":1257,"mtime":1610982688371,"results":"122","hashOfConfig":"68"},{"size":679,"mtime":1610982688374,"results":"123","hashOfConfig":"68"},{"size":112,"mtime":1611146541965,"results":"124","hashOfConfig":"68"},{"size":438,"mtime":1610982688381,"results":"125","hashOfConfig":"68"},{"size":381,"mtime":1611085534621,"results":"126","hashOfConfig":"68"},{"size":549,"mtime":1610982688382,"results":"127","hashOfConfig":"68"},{"size":1901,"mtime":1610982688391,"results":"128","hashOfConfig":"68"},{"size":877,"mtime":1610982688373,"results":"129","hashOfConfig":"68"},{"size":2406,"mtime":1610982688367,"results":"130","hashOfConfig":"68"},{"size":266,"mtime":1610982688369,"results":"131","hashOfConfig":"68"},{"size":1126,"mtime":1610982688366,"results":"132","hashOfConfig":"68"},{"size":681,"mtime":1611254741238,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"y5go9t",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"139"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"139"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"139"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\theme.tsx",[],["274","275"],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\GlobalStyles.ts",[],["276","277"],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\dark.ts",["278"],"export default {\r\n    title: 'dark',\r\n\r\n    colors: {\r\n        primary: '#1b1f38',\r\n        secondary: '#252a48',\r\n        tertiary: '#313862',\r\n\r\n        white: '#fff',\r\n        black: '#000',\r\n        gray: '#bfbfbf',\r\n\r\n        success: '#4e41f0',\r\n        info: '#f7931b',\r\n        warning: '#e44c4e',\r\n    }\r\n}","C:\\dev\\TCC\\AppInvestimento\\src\\store\\createStore.ts",["279"],"C:\\dev\\TCC\\AppInvestimento\\src\\routes\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\reducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\api.ts",[],["280","281"],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\index.tsx",["282","283","284"],"import React, { useState, useMemo, useCallback } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport WalletBox from '../../components/WalletBox';\r\nimport MenssageBox from '../../components/MessageBox';\r\nimport PieChartBox from '../../components/PieChartBox';\r\nimport HistoryBox from '../../components/HistoryBox';\r\nimport HistoryBoxGains from '../../components/HistoryBoxGains';\r\n\r\nimport vendas from '../../repositories/vendas';\r\nimport compras from '../../repositories/compra';\r\nimport listOfMonths from '../../utils/months';\r\n\r\nimport happyImg from '../../assets/happy.svg';\r\nimport sadImg from '../../assets/sad.svg';\r\nimport grinningImg from '../../assets/grinning.svg';\r\nimport opsImg from '../../assets/ops.svg';\r\n\r\nimport {\r\n    Container,\r\n    Content\r\n} from './styles';\r\n\r\nconst DashBoard: React.FC = () => {\r\n    const [monthSelected, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelected, setYearSelected] = useState<number>(new Date().getFullYear());\r\n\r\n    const years = useMemo(() => {\r\n        let uniqueYears: number[] = [];\r\n\r\n        [...vendas, ...compras].forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n\r\n            if (!uniqueYears.includes(year)) {\r\n                uniqueYears.push(year);\r\n            }\r\n        });\r\n        return uniqueYears.map(year => {\r\n            return {\r\n                value: year,\r\n                label: year\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const months = useMemo(() => {\r\n        return listOfMonths.map((month, index) => {\r\n            return {\r\n                value: index + 1,\r\n                label: month,\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const totalSells = useMemo(() => {\r\n        let total: number = 0;\r\n        let totalGain: number = 0;\r\n\r\n        vendas.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    total += Number(item.price);\r\n                    totalGain += Number(item.gain);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return total;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalBuys = useMemo(() => {\r\n        let total: number = 0;\r\n\r\n        compras.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    total += Number(item.price);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return total;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalGains = useMemo(() => {\r\n        let totalGain: number = 0;\r\n\r\n        vendas.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    totalGain += Number(item.gain);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return totalGain;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalBalance = useMemo(() => {\r\n        return totalGains;\r\n    }, [totalBuys, totalSells])\r\n\r\n    const message = useMemo(() => {\r\n        if (totalBuys === 0 && totalSells === 0) {\r\n            return {\r\n                title: 'Ops!',\r\n                description: 'Não há registros!',\r\n                footerText: 'Registre seus investimentos!',\r\n                icon: opsImg\r\n            }\r\n        } else if (totalBalance < 0) {\r\n            return {\r\n                title: 'Que triste!',\r\n                description: 'Nesse mês você perdeu dinheiro!',\r\n                footerText: 'Tente investir com mais sabedoria!',\r\n                icon: sadImg\r\n            }\r\n        } else if (totalBalance === 0) {\r\n            return {\r\n                title: 'Ufa!',\r\n                description: 'Nesse mês você não perdeu nem ganhou!',\r\n                footerText: 'Tenha cuidado. No próximo mês tente investir melhor!',\r\n                icon: grinningImg\r\n            }\r\n        } else {\r\n            return {\r\n                title: 'Muito bem!',\r\n                description: 'Sua carteira está positiva!',\r\n                footerText: 'Continue assim.!',\r\n                icon: happyImg\r\n            }\r\n        }\r\n    }, [totalBalance, totalBuys, totalSells])\r\n\r\n    const relationSellsGuys = useMemo(() => {\r\n        const total = totalBuys + Number(totalSells);\r\n\r\n        const percentGains = (totalBuys / total) * 100;\r\n        const percentExpenses = (Number(totalSells) / total) * 100;\r\n\r\n        const data = [\r\n            {\r\n                name: 'Compras',\r\n                value: totalBuys,\r\n                percent: Number(percentGains.toFixed(1)) || 0,\r\n                color: '#f7931b'\r\n            },\r\n            {\r\n                name: 'Vendas',\r\n                value: totalSells,\r\n                percent: Number(percentExpenses.toFixed(1)) || 0,\r\n                color: '#e44c4e'\r\n            },\r\n        ]\r\n        return data;\r\n    }, [totalBuys, totalSells])\r\n\r\n    const historyData = useMemo(() => {\r\n        return listOfMonths\r\n            .map((_, month) => {\r\n                let amountEntry = 0;\r\n                compras.forEach(buy => {\r\n                    const date = new Date(buy.date);\r\n                    const buyMonth = date.getMonth();\r\n                    const buyYear = date.getFullYear();\r\n\r\n                    if (buyMonth === month && buyYear === yearSelected) {\r\n                        try {\r\n                            amountEntry += Number(buy.amount) * Number(buy.amount);\r\n                        } catch {\r\n                            throw new Error('amountEntry is invalid. amountEntry must be valid number');\r\n                        }\r\n                    }\r\n                })\r\n                let amountOutput = 0;\r\n                vendas.forEach(sell => {\r\n                    const date = new Date(sell.date);\r\n                    const sellMonth = date.getMonth();\r\n                    const sellYear = date.getFullYear();\r\n\r\n                    if (sellMonth === month && sellYear === yearSelected) {\r\n                        try {\r\n                            amountOutput += Number(sell.price) * Number(sell.amount);\r\n                        } catch {\r\n                            throw new Error('amountOutput is invalid. amountOutput must be valid number');\r\n                        }\r\n                    }\r\n                });\r\n                return {\r\n                    month: listOfMonths[month].substr(0, 3),\r\n                    amountEntry,\r\n                    amountOutput,\r\n                }\r\n            })\r\n            .filter(item => {\r\n                const currentMonth = 10;\r\n                const currentYear = new Date().getFullYear();\r\n\r\n                return (yearSelected === currentYear) || (yearSelected < currentYear)\r\n            });\r\n    }, [yearSelected])\r\n\r\n    const historyDataGains = useMemo(() => {\r\n        return listOfMonths\r\n            .map((_, month) => {\r\n                let priceOutput = 0;\r\n                vendas.forEach(sell => {\r\n                    const date = new Date(sell.date);\r\n                    const sellMonth = date.getMonth();\r\n                    const sellYear = date.getFullYear();\r\n\r\n                    if (sellMonth === month && sellYear === yearSelected) {\r\n                        try {\r\n                            priceOutput += Number(sell.gain);\r\n                        } catch {\r\n                            throw new Error('amountOutput is invalid. amountOutput must be valid number');\r\n                        }\r\n                    }\r\n                });\r\n                return {\r\n                    name: listOfMonths[month].substr(0, 3),\r\n                    uv: priceOutput,\r\n                }\r\n            })\r\n            .filter(item => {\r\n                const currentYear = new Date().getFullYear();\r\n\r\n                return (yearSelected === currentYear) || (yearSelected < currentYear)\r\n            });\r\n    }, [yearSelected])\r\n\r\n    const handleMonthSelected = useCallback((month: string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch {\r\n            throw new Error('Invalid month value. Is accept 0 - 24.')\r\n        }\r\n    },[]);\r\n\r\n    const handleYearSelected = (Year: string) => {\r\n        try {\r\n            const parseYear = Number(Year);\r\n            setYearSelected(parseYear);\r\n        } catch {\r\n            throw new Error('Invalid Year value. Is accept integer numbers.')\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Container>\r\n                <ContentHeader title=\"DashBoard\" lineColor=\"#F7931B\">\r\n                    <SelectInput\r\n                        options={months}\r\n                        onChange={(e) => handleMonthSelected(e.target.value)}\r\n                        defaultValue={monthSelected}\r\n                    />\r\n                    <SelectInput\r\n                        options={years}\r\n                        onChange={(e) => handleYearSelected(e.target.value)}\r\n                        defaultValue={yearSelected}\r\n                    />\r\n                </ContentHeader>\r\n                <Content>\r\n                    <WalletBox\r\n                        title='Ganhos'\r\n                        color='#4e41f0'\r\n                        amount={totalBalance}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='dolar'\r\n                    />\r\n                    <WalletBox\r\n                        title='Compras'\r\n                        color='#f7931b'\r\n                        amount={totalBuys}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='arrowUp'\r\n                    />\r\n                    <WalletBox\r\n                        title='Vendas'\r\n                        color='#e44c4e'\r\n                        amount={totalSells}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='arrowDown'\r\n                    />\r\n                    <MenssageBox\r\n                        title={message.title}\r\n                        description={message.description}\r\n                        footerText={message.footerText}\r\n                        icon={message.icon}\r\n                    />\r\n                    <PieChartBox data={relationSellsGuys} />\r\n                    <HistoryBox\r\n                        data={historyData}\r\n                        lineColorAmountEntry='#f7931b'\r\n                        lineColorAmountOutput='#e44c4e'\r\n                    />\r\n                    <HistoryBoxGains \r\n                        data={historyDataGains}\r\n                    />\r\n                </Content>\r\n            </Container>\r\n    );\r\n}\r\nexport default DashBoard;","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatCurrency.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\styles.ts",["285"],"import styled from 'styled-components';\r\nimport style from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    > select {\r\n        padding: 7px 10px;\r\n        border-radius: 5px;\r\n\r\n        margin-left: 7px;\r\n    }\r\n`;","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\emojis.ts",["286"],"export default ['🤑', '🤩', '😍', '😎', '😃', '😄']","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\auth.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootSaga.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\reducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\routes\\auth.routes.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\index.tsx",["287","288","289","290","291"],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\months.ts",["292"],"C:\\dev\\TCC\\AppInvestimento\\src\\repositories\\compra.ts",["293"],"export default [\r\n  { \"active\": \"PTR4\", \"price\": \"10\", \"amount\": \"10\", \"valueB3\": \"1\", \"valueBroker\": \"1\", \"valueActive\": \"1\", \"date\": \"2021-01-10\" },\r\n  { \"active\": \"PTR4\", \"price\": \"20\", \"amount\": \"20\", \"valueB3\": \"2\", \"valueBroker\": \"2\", \"valueActive\": \"1\", \"date\": \"2021-01-17\" },\r\n  { \"active\": \"AMM3\", \"price\": \"40\", \"amount\": \"30\", \"valueB3\": \"3\", \"valueBroker\": \"3\", \"valueActive\": \"1\", \"date\": \"2021-02-10\" }]","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\reducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\light.ts",["294"],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveSell.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatDate.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveBuy.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\index.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootReducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\index.tsx",[],{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"295","replacedBy":"299"},{"ruleId":"297","replacedBy":"300"},{"ruleId":"301","severity":1,"message":"302","line":1,"column":1,"nodeType":"303","endLine":17,"endColumn":2},{"ruleId":"301","severity":1,"message":"304","line":16,"column":1,"nodeType":"303","endLine":23,"endColumn":3},{"ruleId":"295","replacedBy":"305"},{"ruleId":"297","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":69,"column":21,"nodeType":"309","messageId":"310","endLine":69,"endColumn":30},{"ruleId":"311","severity":1,"message":"312","line":118,"column":8,"nodeType":"313","endLine":118,"endColumn":31,"suggestions":"314"},{"ruleId":"307","severity":1,"message":"315","line":213,"column":23,"nodeType":"309","messageId":"310","endLine":213,"endColumn":35},{"ruleId":"307","severity":1,"message":"316","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":13},{"ruleId":"301","severity":1,"message":"317","line":1,"column":1,"nodeType":"303","endLine":1,"endColumn":52},{"ruleId":"307","severity":1,"message":"318","line":8,"column":8,"nodeType":"309","messageId":"310","endLine":8,"endColumn":12},{"ruleId":"307","severity":1,"message":"319","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":11},{"ruleId":"307","severity":1,"message":"320","line":48,"column":12,"nodeType":"309","messageId":"310","endLine":48,"endColumn":17},{"ruleId":"307","severity":1,"message":"321","line":48,"column":19,"nodeType":"309","messageId":"310","endLine":48,"endColumn":27},{"ruleId":"307","severity":1,"message":"322","line":55,"column":11,"nodeType":"309","messageId":"310","endLine":55,"endColumn":25},{"ruleId":"301","severity":1,"message":"317","line":1,"column":1,"nodeType":"303","endLine":14,"endColumn":2},{"ruleId":"301","severity":1,"message":"317","line":1,"column":1,"nodeType":"303","endLine":4,"endColumn":133},{"ruleId":"301","severity":1,"message":"302","line":1,"column":1,"nodeType":"303","endLine":17,"endColumn":2},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],["323"],["324"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default",["323"],["324"],"@typescript-eslint/no-unused-vars","'totalGain' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'totalGains'. Either include it or remove the dependency array.","ArrayExpression",["325"],"'currentMonth' is assigned a value but never used.","'style' is defined but never used.","Assign array to a variable before exporting as module default","'sell' is defined but never used.","'buy' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'activeValueDay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},"Update the dependencies array to be: [totalGains]",{"range":"328","text":"329"},[3826,3849],"[totalGains]"]