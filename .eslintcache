[{"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\theme.tsx":"1","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\GlobalStyles.ts":"2","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\dark.ts":"3","C:\\dev\\TCC\\AppInvestimento\\src\\store\\createStore.ts":"4","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\index.tsx":"5","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\reducer.ts":"6","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\sagas.ts":"7","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\actions.ts":"8","C:\\dev\\TCC\\AppInvestimento\\src\\services\\api.ts":"9","C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\index.tsx":"10","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\styles.ts":"11","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\styles.ts":"12","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatCurrency.ts":"13","C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\index.tsx":"14","C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\index.tsx":"15","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\index.tsx":"16","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\index.tsx":"17","C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\styles.ts":"18","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\styles.ts":"19","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\styles.ts":"20","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\emojis.ts":"21","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\styles.ts":"22","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\styles.ts":"23","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\actions.ts":"24","C:\\dev\\TCC\\AppInvestimento\\src\\index.tsx":"25","C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\auth.tsx":"26","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootSaga.ts":"27","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\reducer.ts":"28","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\auth.routes.tsx":"29","C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\index.tsx":"30","C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\index.tsx":"31","C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\styles.ts":"32","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\months.ts":"33","C:\\dev\\TCC\\AppInvestimento\\src\\repositories\\compra.ts":"34","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\index.tsx":"35","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\index.tsx":"36","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\styles.ts":"37","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\styles.ts":"38","C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\styles.ts":"39","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\styles.ts":"40","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\styles.ts":"41","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\actions.ts":"42","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\index.tsx":"43","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\reducer.ts":"44","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\sagas.ts":"45","C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\light.ts":"46","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\sagas.ts":"47","C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveSell.ts":"48","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\index.tsx":"49","C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\styles.ts":"50","C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatDate.ts":"51","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\index.tsx":"52","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\index.tsx":"53","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\styles.ts":"54","C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\styles.ts":"55","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\index.tsx":"56","C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveBuy.ts":"57","C:\\dev\\TCC\\AppInvestimento\\src\\store\\index.ts":"58","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootReducer.ts":"59","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\actions.ts":"60","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\index.tsx":"61","C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\index.tsx":"62","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\index.tsx":"63","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\index.tsx":"64","C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\styles.ts":"65","C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\index.tsx":"66","C:\\dev\\TCC\\AppInvestimento\\src\\App.tsx":"67","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\sagas.ts":"68","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\app.routes.tsx":"69","C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\styles.ts":"70","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Aside\\index.tsx":"71","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\reducer.ts":"72","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\styles.ts":"73","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Aside\\styles.ts":"74"},{"size":1509,"mtime":1610982688376,"results":"75","hashOfConfig":"76"},{"size":341,"mtime":1610982688386,"results":"77","hashOfConfig":"76"},{"size":315,"mtime":1610982688387,"results":"78","hashOfConfig":"76"},{"size":844,"mtime":1611085466566,"results":"79","hashOfConfig":"76"},{"size":382,"mtime":1610982688380,"results":"80","hashOfConfig":"76"},{"size":949,"mtime":1610982688383,"results":"81","hashOfConfig":"76"},{"size":484,"mtime":1610982688382,"results":"82","hashOfConfig":"76"},{"size":448,"mtime":1610982688384,"results":"83","hashOfConfig":"76"},{"size":129,"mtime":1610982688380,"results":"84","hashOfConfig":"76"},{"size":11614,"mtime":1610982688389,"results":"85","hashOfConfig":"76"},{"size":1038,"mtime":1610982688391,"results":"86","hashOfConfig":"76"},{"size":455,"mtime":1610982688370,"results":"87","hashOfConfig":"76"},{"size":236,"mtime":1610982688388,"results":"88","hashOfConfig":"76"},{"size":571,"mtime":1610982688366,"results":"89","hashOfConfig":"76"},{"size":1546,"mtime":1610982688373,"results":"90","hashOfConfig":"76"},{"size":2210,"mtime":1610982688367,"results":"91","hashOfConfig":"76"},{"size":1129,"mtime":1610982688370,"results":"92","hashOfConfig":"76"},{"size":232,"mtime":1610982688374,"results":"93","hashOfConfig":"76"},{"size":1709,"mtime":1610982688367,"results":"94","hashOfConfig":"76"},{"size":1709,"mtime":1610982688368,"results":"95","hashOfConfig":"76"},{"size":63,"mtime":1610982688388,"results":"96","hashOfConfig":"76"},{"size":633,"mtime":1610982688365,"results":"97","hashOfConfig":"76"},{"size":509,"mtime":1610982688374,"results":"98","hashOfConfig":"76"},{"size":555,"mtime":1611014819859,"results":"99","hashOfConfig":"76"},{"size":523,"mtime":1610982688377,"results":"100","hashOfConfig":"76"},{"size":1229,"mtime":1610982688376,"results":"101","hashOfConfig":"76"},{"size":290,"mtime":1611085558185,"results":"102","hashOfConfig":"76"},{"size":941,"mtime":1610982688382,"results":"103","hashOfConfig":"76"},{"size":274,"mtime":1610982688379,"results":"104","hashOfConfig":"76"},{"size":4720,"mtime":1610982688392,"results":"105","hashOfConfig":"76"},{"size":8074,"mtime":1611329395935,"results":"106","hashOfConfig":"76"},{"size":1088,"mtime":1610982688390,"results":"107","hashOfConfig":"76"},{"size":205,"mtime":1610982688389,"results":"108","hashOfConfig":"76"},{"size":418,"mtime":1610982688378,"results":"109","hashOfConfig":"76"},{"size":1496,"mtime":1610982688375,"results":"110","hashOfConfig":"76"},{"size":198,"mtime":1610982688365,"results":"111","hashOfConfig":"76"},{"size":172,"mtime":1610982688369,"results":"112","hashOfConfig":"76"},{"size":390,"mtime":1610982688364,"results":"113","hashOfConfig":"76"},{"size":2554,"mtime":1610982688373,"results":"114","hashOfConfig":"76"},{"size":518,"mtime":1610982688371,"results":"115","hashOfConfig":"76"},{"size":1221,"mtime":1610982688369,"results":"116","hashOfConfig":"76"},{"size":850,"mtime":1611145158765,"results":"117","hashOfConfig":"76"},{"size":4832,"mtime":1611252344431,"results":"118","hashOfConfig":"76"},{"size":761,"mtime":1611085463948,"results":"119","hashOfConfig":"76"},{"size":826,"mtime":1611087075157,"results":"120","hashOfConfig":"76"},{"size":313,"mtime":1610982688387,"results":"121","hashOfConfig":"76"},{"size":492,"mtime":1610982688384,"results":"122","hashOfConfig":"76"},{"size":113,"mtime":1611146544396,"results":"123","hashOfConfig":"76"},{"size":376,"mtime":1610982688370,"results":"124","hashOfConfig":"76"},{"size":206,"mtime":1610982688390,"results":"125","hashOfConfig":"76"},{"size":444,"mtime":1610982688388,"results":"126","hashOfConfig":"76"},{"size":699,"mtime":1610982688371,"results":"127","hashOfConfig":"76"},{"size":318,"mtime":1610982688364,"results":"128","hashOfConfig":"76"},{"size":1723,"mtime":1610982688375,"results":"129","hashOfConfig":"76"},{"size":1257,"mtime":1610982688371,"results":"130","hashOfConfig":"76"},{"size":679,"mtime":1610982688374,"results":"131","hashOfConfig":"76"},{"size":112,"mtime":1611146541965,"results":"132","hashOfConfig":"76"},{"size":438,"mtime":1610982688381,"results":"133","hashOfConfig":"76"},{"size":381,"mtime":1611085534621,"results":"134","hashOfConfig":"76"},{"size":549,"mtime":1610982688382,"results":"135","hashOfConfig":"76"},{"size":1901,"mtime":1610982688391,"results":"136","hashOfConfig":"76"},{"size":877,"mtime":1610982688373,"results":"137","hashOfConfig":"76"},{"size":2406,"mtime":1610982688367,"results":"138","hashOfConfig":"76"},{"size":266,"mtime":1610982688369,"results":"139","hashOfConfig":"76"},{"size":1126,"mtime":1610982688366,"results":"140","hashOfConfig":"76"},{"size":681,"mtime":1611254741238,"results":"141","hashOfConfig":"76"},{"size":589,"mtime":1610982688359,"results":"142","hashOfConfig":"76"},{"size":607,"mtime":1610982688385,"results":"143","hashOfConfig":"76"},{"size":574,"mtime":1610982688379,"results":"144","hashOfConfig":"76"},{"size":257,"mtime":1610982688392,"results":"145","hashOfConfig":"76"},{"size":3037,"mtime":1610982688363,"results":"146","hashOfConfig":"76"},{"size":745,"mtime":1610982688385,"results":"147","hashOfConfig":"76"},{"size":3598,"mtime":1610982688372,"results":"148","hashOfConfig":"76"},{"size":2840,"mtime":1610982688363,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"y5go9t",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"166"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"194"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"152"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"166"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\theme.tsx",[],["314","315"],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\GlobalStyles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\dark.ts",["316"],"export default {\r\n    title: 'dark',\r\n\r\n    colors: {\r\n        primary: '#1b1f38',\r\n        secondary: '#252a48',\r\n        tertiary: '#313862',\r\n\r\n        white: '#fff',\r\n        black: '#000',\r\n        gray: '#bfbfbf',\r\n\r\n        success: '#4e41f0',\r\n        info: '#f7931b',\r\n        warning: '#e44c4e',\r\n    }\r\n}",["317","318"],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\createStore.ts",["319"],"import { createStore, applyMiddleware, Middleware, Reducer } from 'redux';\r\nimport { AuthAction, AuthState } from './modules/auth/types';\r\nimport { ActiveSellAction, ActiveSellState } from './modules/activeSell/types';\r\nimport { ActiveBuyAction, ActiveBuyState } from './modules/activeBuy/types';\r\nimport { ActiveAddBuyAction, activeAddBuyState } from './modules/activeAddBuy/types';\r\n\r\nexport interface StoreState {\r\n  auth: AuthState;\r\n  activeSell: ActiveSellState;\r\n  activeBuy: ActiveBuyState;\r\n  activeAddBuy: activeAddBuyState;\r\n}\r\n\r\nexport type StoreAction = AuthAction | ActiveSellAction | ActiveBuyAction | ActiveAddBuyAction;\r\n\r\nexport default (\r\n  reducers: Reducer<StoreState, StoreAction>,\r\n  middlewares: Middleware[]\r\n) => {\r\n  const enhancer = applyMiddleware(...middlewares);\r\n\r\n  return createStore(reducers, enhancer);\r\n};\r\n","C:\\dev\\TCC\\AppInvestimento\\src\\routes\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\reducer.ts",[],["320","321"],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\api.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\index.tsx",["322","323","324"],"import React, { useState, useMemo, useCallback } from 'react';\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport WalletBox from '../../components/WalletBox';\r\nimport MenssageBox from '../../components/MessageBox';\r\nimport PieChartBox from '../../components/PieChartBox';\r\nimport HistoryBox from '../../components/HistoryBox';\r\nimport HistoryBoxGains from '../../components/HistoryBoxGains';\r\n\r\nimport vendas from '../../repositories/vendas';\r\nimport compras from '../../repositories/compra';\r\nimport listOfMonths from '../../utils/months';\r\n\r\nimport happyImg from '../../assets/happy.svg';\r\nimport sadImg from '../../assets/sad.svg';\r\nimport grinningImg from '../../assets/grinning.svg';\r\nimport opsImg from '../../assets/ops.svg';\r\n\r\nimport {\r\n    Container,\r\n    Content\r\n} from './styles';\r\n\r\nconst DashBoard: React.FC = () => {\r\n    const [monthSelected, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelected, setYearSelected] = useState<number>(new Date().getFullYear());\r\n\r\n    const years = useMemo(() => {\r\n        let uniqueYears: number[] = [];\r\n\r\n        [...vendas, ...compras].forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n\r\n            if (!uniqueYears.includes(year)) {\r\n                uniqueYears.push(year);\r\n            }\r\n        });\r\n        return uniqueYears.map(year => {\r\n            return {\r\n                value: year,\r\n                label: year\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const months = useMemo(() => {\r\n        return listOfMonths.map((month, index) => {\r\n            return {\r\n                value: index + 1,\r\n                label: month,\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const totalSells = useMemo(() => {\r\n        let total: number = 0;\r\n        let totalGain: number = 0;\r\n\r\n        vendas.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    total += Number(item.price);\r\n                    totalGain += Number(item.gain);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return total;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalBuys = useMemo(() => {\r\n        let total: number = 0;\r\n\r\n        compras.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    total += Number(item.price);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return total;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalGains = useMemo(() => {\r\n        let totalGain: number = 0;\r\n\r\n        vendas.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n            const month = date.getMonth() + 1;\r\n\r\n            if (month === monthSelected && year === yearSelected) {\r\n                try {\r\n                    totalGain += Number(item.gain);\r\n                } catch {\r\n                    throw new Error('Invalid amount! Amount must be number');\r\n                }\r\n            }\r\n        });\r\n        return totalGain;\r\n    }, [monthSelected, yearSelected])\r\n\r\n    const totalBalance = useMemo(() => {\r\n        return totalGains;\r\n    }, [totalBuys, totalSells])\r\n\r\n    const message = useMemo(() => {\r\n        if (totalBuys === 0 && totalSells === 0) {\r\n            return {\r\n                title: 'Ops!',\r\n                description: 'Não há registros!',\r\n                footerText: 'Registre seus investimentos!',\r\n                icon: opsImg\r\n            }\r\n        } else if (totalBalance < 0) {\r\n            return {\r\n                title: 'Que triste!',\r\n                description: 'Nesse mês você perdeu dinheiro!',\r\n                footerText: 'Tente investir com mais sabedoria!',\r\n                icon: sadImg\r\n            }\r\n        } else if (totalBalance === 0) {\r\n            return {\r\n                title: 'Ufa!',\r\n                description: 'Nesse mês você não perdeu nem ganhou!',\r\n                footerText: 'Tenha cuidado. No próximo mês tente investir melhor!',\r\n                icon: grinningImg\r\n            }\r\n        } else {\r\n            return {\r\n                title: 'Muito bem!',\r\n                description: 'Sua carteira está positiva!',\r\n                footerText: 'Continue assim.!',\r\n                icon: happyImg\r\n            }\r\n        }\r\n    }, [totalBalance, totalBuys, totalSells])\r\n\r\n    const relationSellsGuys = useMemo(() => {\r\n        const total = totalBuys + Number(totalSells);\r\n\r\n        const percentGains = (totalBuys / total) * 100;\r\n        const percentExpenses = (Number(totalSells) / total) * 100;\r\n\r\n        const data = [\r\n            {\r\n                name: 'Compras',\r\n                value: totalBuys,\r\n                percent: Number(percentGains.toFixed(1)) || 0,\r\n                color: '#f7931b'\r\n            },\r\n            {\r\n                name: 'Vendas',\r\n                value: totalSells,\r\n                percent: Number(percentExpenses.toFixed(1)) || 0,\r\n                color: '#e44c4e'\r\n            },\r\n        ]\r\n        return data;\r\n    }, [totalBuys, totalSells])\r\n\r\n    const historyData = useMemo(() => {\r\n        return listOfMonths\r\n            .map((_, month) => {\r\n                let amountEntry = 0;\r\n                compras.forEach(buy => {\r\n                    const date = new Date(buy.date);\r\n                    const buyMonth = date.getMonth();\r\n                    const buyYear = date.getFullYear();\r\n\r\n                    if (buyMonth === month && buyYear === yearSelected) {\r\n                        try {\r\n                            amountEntry += Number(buy.amount) * Number(buy.amount);\r\n                        } catch {\r\n                            throw new Error('amountEntry is invalid. amountEntry must be valid number');\r\n                        }\r\n                    }\r\n                })\r\n                let amountOutput = 0;\r\n                vendas.forEach(sell => {\r\n                    const date = new Date(sell.date);\r\n                    const sellMonth = date.getMonth();\r\n                    const sellYear = date.getFullYear();\r\n\r\n                    if (sellMonth === month && sellYear === yearSelected) {\r\n                        try {\r\n                            amountOutput += Number(sell.price) * Number(sell.amount);\r\n                        } catch {\r\n                            throw new Error('amountOutput is invalid. amountOutput must be valid number');\r\n                        }\r\n                    }\r\n                });\r\n                return {\r\n                    month: listOfMonths[month].substr(0, 3),\r\n                    amountEntry,\r\n                    amountOutput,\r\n                }\r\n            })\r\n            .filter(item => {\r\n                const currentMonth = 10;\r\n                const currentYear = new Date().getFullYear();\r\n\r\n                return (yearSelected === currentYear) || (yearSelected < currentYear)\r\n            });\r\n    }, [yearSelected])\r\n\r\n    const historyDataGains = useMemo(() => {\r\n        return listOfMonths\r\n            .map((_, month) => {\r\n                let priceOutput = 0;\r\n                vendas.forEach(sell => {\r\n                    const date = new Date(sell.date);\r\n                    const sellMonth = date.getMonth();\r\n                    const sellYear = date.getFullYear();\r\n\r\n                    if (sellMonth === month && sellYear === yearSelected) {\r\n                        try {\r\n                            priceOutput += Number(sell.gain);\r\n                        } catch {\r\n                            throw new Error('amountOutput is invalid. amountOutput must be valid number');\r\n                        }\r\n                    }\r\n                });\r\n                return {\r\n                    name: listOfMonths[month].substr(0, 3),\r\n                    uv: priceOutput,\r\n                }\r\n            })\r\n            .filter(item => {\r\n                const currentYear = new Date().getFullYear();\r\n\r\n                return (yearSelected === currentYear) || (yearSelected < currentYear)\r\n            });\r\n    }, [yearSelected])\r\n\r\n    const handleMonthSelected = useCallback((month: string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch {\r\n            throw new Error('Invalid month value. Is accept 0 - 24.')\r\n        }\r\n    },[]);\r\n\r\n    const handleYearSelected = (Year: string) => {\r\n        try {\r\n            const parseYear = Number(Year);\r\n            setYearSelected(parseYear);\r\n        } catch {\r\n            throw new Error('Invalid Year value. Is accept integer numbers.')\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Container>\r\n                <ContentHeader title=\"DashBoard\" lineColor=\"#F7931B\">\r\n                    <SelectInput\r\n                        options={months}\r\n                        onChange={(e) => handleMonthSelected(e.target.value)}\r\n                        defaultValue={monthSelected}\r\n                    />\r\n                    <SelectInput\r\n                        options={years}\r\n                        onChange={(e) => handleYearSelected(e.target.value)}\r\n                        defaultValue={yearSelected}\r\n                    />\r\n                </ContentHeader>\r\n                <Content>\r\n                    <WalletBox\r\n                        title='Ganhos'\r\n                        color='#4e41f0'\r\n                        amount={totalBalance}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='dolar'\r\n                    />\r\n                    <WalletBox\r\n                        title='Compras'\r\n                        color='#f7931b'\r\n                        amount={totalBuys}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='arrowUp'\r\n                    />\r\n                    <WalletBox\r\n                        title='Vendas'\r\n                        color='#e44c4e'\r\n                        amount={totalSells}\r\n                        footerLabel='atualizado com base nas entradas e saidas'\r\n                        icon='arrowDown'\r\n                    />\r\n                    <MenssageBox\r\n                        title={message.title}\r\n                        description={message.description}\r\n                        footerText={message.footerText}\r\n                        icon={message.icon}\r\n                    />\r\n                    <PieChartBox data={relationSellsGuys} />\r\n                    <HistoryBox\r\n                        data={historyData}\r\n                        lineColorAmountEntry='#f7931b'\r\n                        lineColorAmountOutput='#e44c4e'\r\n                    />\r\n                    <HistoryBoxGains \r\n                        data={historyDataGains}\r\n                    />\r\n                </Content>\r\n            </Container>\r\n    );\r\n}\r\nexport default DashBoard;","C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatCurrency.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\index.tsx",[],["325","326"],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\styles.ts",["327"],"import styled from 'styled-components';\r\nimport style from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    > select {\r\n        padding: 7px 10px;\r\n        border-radius: 5px;\r\n\r\n        margin-left: 7px;\r\n    }\r\n`;",["328","329"],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\styles.ts",[],["330","331"],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBoxGains\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\emojis.ts",["332"],"export default ['🤑', '🤩', '😍', '😎', '😃', '😄']","C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\hooks\\auth.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootSaga.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\reducer.ts",[],["333","334"],"C:\\dev\\TCC\\AppInvestimento\\src\\routes\\auth.routes.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\index.tsx",["335","336","337","338","339","340"],"import React, { useMemo, useState, useEffect } from 'react';\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport ContentHeader from '../../components/ContentHeader';\r\nimport SelectInput from '../../components/SelectInput';\r\nimport HistoryFinanceCard from '../../components/HistoryFinanceCard';\r\n\r\nimport sell from '../../repositories/vendas';\r\nimport buy from '../../repositories/compra';\r\n\r\nimport formatCurrency from '../../utils/formatCurrency';\r\nimport formatDate from '../../utils/formatDate';\r\nimport listOfMonths from '../../utils/months';\r\n\r\nimport {\r\n    Container,\r\n    Content,\r\n    Filters\r\n} from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { StoreState } from '../../store/createStore';\r\nimport { getActiveSellRequest } from '../../store/modules/activeSell/actions';\r\nimport { getActiveBuyRequest } from '../../store/modules/activeBuy/actions';\r\n\r\ninterface IRouteParams {\r\n    match: {\r\n        params: {\r\n            type: string;\r\n        }\r\n    }\r\n}\r\n\r\ninterface IData {\r\n    id: string;\r\n    description: string;\r\n    price: number;\r\n    amount: number;\r\n    total: string;\r\n    dateFormated: string;\r\n    tagColor: string;\r\n}\r\n\r\nconst List: React.FC<IRouteParams> = ({ match }) => {\r\n    const [data, setData] = useState<IData[]>([]);\r\n    const [monthSelected, setMonthSelected] = useState<number>(new Date().getMonth() + 1);\r\n    const [yearSelected, setYearSelected] = useState<number>(new Date().getFullYear());\r\n    const [frequencyFilterSelected, setFrequencyFilterSelected] = useState(['gain', 'lose']);\r\n    const [click, setClick] = useState();\r\n\r\n    const ActiveBuy = useSelector((state: StoreState) => state.activeBuy);\r\n    const ActiveSell = useSelector((state: StoreState) => state.activeSell);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const activeValueDay = 15;\r\n    const movimentType = match.params.type;\r\n    console.log(movimentType);\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        movimentType === 'entry-balance' ?\r\n            dispatch(getActiveBuyRequest())\r\n            :\r\n            dispatch(getActiveSellRequest())\r\n        setData([])\r\n    }, [dispatch, movimentType])\r\n\r\n    const pageData = useMemo(() => {\r\n        if(ActiveBuy.Active[0].active === 'null') \r\n        {\r\n            setData([]) \r\n        }\r\n        console.log(data.length)\r\n        console.log(data)\r\n        return movimentType === 'entry-balance' ?\r\n            {\r\n                title: 'Compras',\r\n                lineColor: '#53cc5d',\r\n                data: ActiveBuy.Active\r\n            }\r\n            :\r\n            {\r\n                title: 'Vendas',\r\n                lineColor: '#53cc5d',\r\n                data: ActiveSell.Active\r\n            }\r\n    }, [movimentType, ActiveBuy.Active, ActiveSell.Active]);\r\n\r\n    const years = useMemo(() => {\r\n        let uniqueYears: number[] = [];\r\n\r\n        const { data } = pageData;\r\n\r\n        data.forEach(item => {\r\n            const date = new Date(item.date);\r\n            const year = date.getFullYear();\r\n\r\n            if (!uniqueYears.includes(year)) {\r\n                uniqueYears.push(year);\r\n            }\r\n        });\r\n        return uniqueYears.map(year => {\r\n            return {\r\n                value: year,\r\n                label: year\r\n            }\r\n        })\r\n    }, [pageData]);\r\n\r\n    const months = useMemo(() => {\r\n        return listOfMonths.map((month, index) => {\r\n            return {\r\n                value: index + 1,\r\n                label: month,\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    const handleFrequencyClick = (frequency: string) => {\r\n        const alreadySelected = frequencyFilterSelected.findIndex(item => item === frequency);\r\n        if (alreadySelected >= 0) {\r\n            const filtered = frequencyFilterSelected.filter(item => item !== frequency);\r\n            setFrequencyFilterSelected(filtered);\r\n        } else setFrequencyFilterSelected((prev) => [...prev, frequency]);\r\n    }\r\n\r\n    const handleMonthSelected = (month: string) => {\r\n        try {\r\n            const parseMonth = Number(month);\r\n            setMonthSelected(parseMonth);\r\n        } catch {\r\n            throw new Error('Invalid month value. Is accept 0 - 24.')\r\n        }\r\n    }\r\n\r\n    const handleYearSelected = (Year: string) => {\r\n        try {\r\n            const parseYear = Number(Year);\r\n            setYearSelected(parseYear);\r\n        } catch {\r\n            throw new Error('Invalid Year value. Is accept integer numbers.')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const { data } = pageData;\r\n\r\n        const filteredData = data.filter(item => {\r\n            const date = new Date(item.date);\r\n            const month = date.getMonth() + 1;\r\n            const year = date.getFullYear();\r\n            const frequency = Number(item.gain) > 0 ? 'gain' : 'lose'\r\n\r\n            return month === monthSelected && year === yearSelected && frequencyFilterSelected.includes(frequency);\r\n        });\r\n        const formatedData = filteredData.map(item => {\r\n            return {\r\n                id: uuid_v4(),\r\n                description: item.active,\r\n                amount: item.amount,\r\n                price: item.valueActive,\r\n                total: formatCurrency(Number(item.gain)),\r\n                dateFormated: formatDate(item.date),\r\n                tagColor: Number(item.gain) > 0 ? '#00cc29' : '#85040b',\r\n            }\r\n        });\r\n        setData(formatedData);\r\n    }, [pageData, monthSelected, yearSelected, frequencyFilterSelected]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                data.length > 0 &&\r\n                <>\r\n                    <ContentHeader title={pageData.title} lineColor={pageData.lineColor}>\r\n                        <SelectInput\r\n                            options={months}\r\n                            onChange={(e) => handleMonthSelected(e.target.value)}\r\n                            defaultValue={monthSelected}\r\n                        />\r\n                        <SelectInput\r\n                            options={years}\r\n                            onChange={(e) => handleYearSelected(e.target.value)}\r\n                            defaultValue={yearSelected}\r\n                        />\r\n                    </ContentHeader>\r\n                    <Filters>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`\r\n                        tag-filter \r\n                        tag-filter-recurrent\r\n                        ${frequencyFilterSelected.includes('gain') && 'tag-actived'}\r\n                        `}\r\n                            onClick={() => handleFrequencyClick('gain')}\r\n                        >\r\n                            Ganhos\r\n                    </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className={`\r\n                        tag-filter \r\n                        tag-filter-eventual\r\n                        ${frequencyFilterSelected.includes('lose') && 'tag-actived'}\r\n                        `}\r\n                            onClick={() => handleFrequencyClick('lose')}\r\n                        >\r\n                            Perdas\r\n                    </button>\r\n                    </Filters>\r\n                    <Content>\r\n                        {\r\n                            data.map(item => (\r\n                                <HistoryFinanceCard\r\n                                    key={item.id}\r\n                                    tagColor={item.tagColor}\r\n                                    title={item.description}\r\n                                    subtitle={item.dateFormated}\r\n                                    price={item.price}\r\n                                    total={item.total}\r\n                                    amount={item.amount}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Content>\r\n                </>\r\n            }\r\n\r\n        </Container>\r\n    );\r\n}\r\nexport default List;","C:\\dev\\TCC\\AppInvestimento\\src\\views\\List\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\months.ts",["341"],"export default [\r\n    'Janeiro',\r\n    'Fevereiro',\r\n    'Março',\r\n    'Abril',\r\n    'Maio',\r\n    'Junho',\r\n    'Julho',\r\n    'Agosto',\r\n    'Setembro',\r\n    'Outubro',\r\n    'Novembro',\r\n    'Dezembro',\r\n]","C:\\dev\\TCC\\AppInvestimento\\src\\repositories\\compra.ts",["342"],"export default [\r\n  { \"active\": \"PTR4\", \"price\": \"10\", \"amount\": \"10\", \"valueB3\": \"1\", \"valueBroker\": \"1\", \"valueActive\": \"1\", \"date\": \"2021-01-10\" },\r\n  { \"active\": \"PTR4\", \"price\": \"20\", \"amount\": \"20\", \"valueB3\": \"2\", \"valueBroker\": \"2\", \"valueActive\": \"1\", \"date\": \"2021-01-17\" },\r\n  { \"active\": \"AMM3\", \"price\": \"40\", \"amount\": \"30\", \"valueB3\": \"3\", \"valueBroker\": \"3\", \"valueActive\": \"1\", \"date\": \"2021-02-10\" }]","C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Content\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\PieChartBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MainHeader\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\reducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeAddBuy\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\styles\\themes\\light.ts",["343"],"export default {\r\n    title: 'light',\r\n\r\n    colors: {\r\n        primary: '#dcdcdc',\r\n        secondary: '#fff',\r\n        tertiary: '#f5f5f5',\r\n\r\n        white: '#000',\r\n        black: '#fff',\r\n        gray: '#bfbfbf',\r\n\r\n        success: '#03bb85',\r\n        info: '#3b5998',\r\n        warning: '#ff6961',\r\n    }\r\n}","C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeSell\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveSell.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Layout\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\DashBoard\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\utils\\formatDate.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Button\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\WalletBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\MessageBox\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Toggle\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\services\\apiActiveBuy.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\index.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\rootReducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\activeBuy\\actions.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\SignIn\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\SelectInput\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryBox\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Input\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\ContentHeader\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\HistoryFinanceCard\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\App.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\sagas.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\routes\\app.routes.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\views\\Transation\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Aside\\index.tsx",[],"C:\\dev\\TCC\\AppInvestimento\\src\\store\\modules\\auth\\reducer.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Moves\\styles.ts",[],"C:\\dev\\TCC\\AppInvestimento\\src\\components\\Aside\\styles.ts",[],{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","severity":1,"message":"349","line":1,"column":1,"nodeType":"350","endLine":17,"endColumn":2},{"ruleId":"344","replacedBy":"351"},{"ruleId":"346","replacedBy":"352"},{"ruleId":"348","severity":1,"message":"353","line":16,"column":1,"nodeType":"350","endLine":23,"endColumn":3},{"ruleId":"344","replacedBy":"354"},{"ruleId":"346","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":69,"column":21,"nodeType":"358","messageId":"359","endLine":69,"endColumn":30},{"ruleId":"360","severity":1,"message":"361","line":118,"column":8,"nodeType":"362","endLine":118,"endColumn":31,"suggestions":"363"},{"ruleId":"356","severity":1,"message":"364","line":213,"column":23,"nodeType":"358","messageId":"359","endLine":213,"endColumn":35},{"ruleId":"344","replacedBy":"365"},{"ruleId":"346","replacedBy":"366"},{"ruleId":"356","severity":1,"message":"367","line":2,"column":8,"nodeType":"358","messageId":"359","endLine":2,"endColumn":13},{"ruleId":"344","replacedBy":"368"},{"ruleId":"346","replacedBy":"369"},{"ruleId":"344","replacedBy":"370"},{"ruleId":"346","replacedBy":"371"},{"ruleId":"348","severity":1,"message":"372","line":1,"column":1,"nodeType":"350","endLine":1,"endColumn":52},{"ruleId":"344","replacedBy":"373"},{"ruleId":"346","replacedBy":"374"},{"ruleId":"356","severity":1,"message":"375","line":8,"column":8,"nodeType":"358","messageId":"359","endLine":8,"endColumn":12},{"ruleId":"356","severity":1,"message":"376","line":9,"column":8,"nodeType":"358","messageId":"359","endLine":9,"endColumn":11},{"ruleId":"356","severity":1,"message":"377","line":48,"column":12,"nodeType":"358","messageId":"359","endLine":48,"endColumn":17},{"ruleId":"356","severity":1,"message":"378","line":48,"column":19,"nodeType":"358","messageId":"359","endLine":48,"endColumn":27},{"ruleId":"356","severity":1,"message":"379","line":55,"column":11,"nodeType":"358","messageId":"359","endLine":55,"endColumn":25},{"ruleId":"360","severity":1,"message":"380","line":90,"column":8,"nodeType":"362","endLine":90,"endColumn":59,"suggestions":"381"},{"ruleId":"348","severity":1,"message":"372","line":1,"column":1,"nodeType":"350","endLine":14,"endColumn":2},{"ruleId":"348","severity":1,"message":"372","line":1,"column":1,"nodeType":"350","endLine":4,"endColumn":133},{"ruleId":"348","severity":1,"message":"349","line":1,"column":1,"nodeType":"350","endLine":17,"endColumn":2},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["382"],["383"],"Assign arrow function to a variable before exporting as module default",["382"],["383"],"@typescript-eslint/no-unused-vars","'totalGain' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'totalGains'. Either include it or remove the dependency array.","ArrayExpression",["384"],"'currentMonth' is assigned a value but never used.",["382"],["383"],"'style' is defined but never used.",["382"],["383"],["382"],["383"],"Assign array to a variable before exporting as module default",["382"],["383"],"'sell' is defined but never used.","'buy' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'activeValueDay' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.",["385"],"no-global-assign","no-unsafe-negation",{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [totalGains]",{"range":"390","text":"391"},"Update the dependencies array to be: [ActiveBuy.Active, data, movimentType, ActiveSell.Active]",{"range":"392","text":"393"},[3826,3849],"[totalGains]",[2738,2789],"[ActiveBuy.Active, data, movimentType, ActiveSell.Active]"]